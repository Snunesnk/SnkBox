---
version: '3'
services:

  # NZBget container
  nzbget:
    image: 'linuxserver/nzbget:latest'
    container_name: nzbget
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data/services/nzbget:/config'
      - '/data/usenet:/usenet'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '6789:6789'

  # Sonarr container
  sonarr:
    image: 'linuxserver/sonarr:preview'
    container_name: sonarr
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    depends_on:
      - nzbget
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/merge/media/Series:/Series'
      - '/data/services/sonarr:/config'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8989:8989'

  # Radarr conatainer
  radarr:
    image: 'linuxserver/radarr:latest'
    container_name: radarr
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    depends_on:
      - nzbget
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data/services/radarr:/config'
      - '/merge/media/Movies:/Movies'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '7878:7878'

  # Jellyfin container
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    network_mode: "host"
    user: 1001:1001
    environment:
      - TZ=Europe/Paris
    volumes:
      - '/data/services/jellyfin:/config'
      - '/merge/media:/media'
      - '/etc/letsencrypt/keys:/etc/keys'
      - '/data/cache:/cache'
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped

  # Watchtower container
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/root/.docker/config.json:/config.json'
    environment:
      - WATCHTOWER_CLEANUP=true

  # Handbrake container
  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    ports:
      - "5800:5800"
    volumes:
      - "/data/services/handbrake:/config:rw"
      - "/:/storage:ro"
      - "/data/usenet/media/Movies:/watch:rw"
      - "/data/usenet/media/Series:/watch2:rw"
      - "/data/media/Movies:/output:rw"
      - "/data/media/Series:/output2:rw"
    environment:
      - AUTOMATED_CONVERSION_KEEP_SOURCE=0
      - AUTOMATED_CONVERSION_OUTPUT_SUBDIR=SAME_AS_SRC
      - USER_ID=1001
      - GROUP_ID=1001
      - TZ=Europe/Paris
      - KEEP_APP_RUNNING=1

  # Ombi container
  ombi:
    image: ghcr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Paris
      - BASE_URL=/ombi
    volumes:
      - '/data/services/ombi:/config'
    ports:
      - 3579:3579
    restart: unless-stopped

  # NzbHydra2 container
  nzbhydra2:
    image: ghcr.io/linuxserver/nzbhydra2:latest
    container_name: nzbhydra2
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data/services/nzbhydra2:/config'
      - '/data/usenet/media:/downloads'
    ports:
      - 5076:5076
    restart: unless-stopped

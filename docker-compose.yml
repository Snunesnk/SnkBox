---
version: '3'
services:

  # NZBget container
  nzbget:
    image: 'linuxserver/nzbget:latest'
    container_name: nzbget
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data/services/nzbget:/config'
      - '/data/usenet:/usenet'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '6789:6789'

  # Sonarr container
  sonarr:
    image: 'linuxserver/sonarr:latest'
    container_name: sonarr
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    depends_on:
      - nzbget
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data:/data'
      - '/data/services/sonarr:/config'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8989:8989'

  # Radarr conatainer
  radarr:
    image: 'linuxserver/radarr:latest'
    container_name: radarr
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    depends_on:
      - nzbget
    environment:
      - PGID=1001
      - PUID=1001
      - TZ=Europe/Paris
    volumes:
      - '/data:/data'
      - '/data/services/radarr:/config'
      - '/data/usenet:/usenet'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '7878:7878'

  # Jackett conatainer
  jackett:
    image: 'linuxserver/jackett:latest'
    container_name: jackett
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Paris
      - AUTO_UPDATE=true
    volumes:
      - '/data/services/jackett:/config'
    ports:
      - '9117:9117'
    restart: unless-stopped

  # Jellyfin container
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    network_mode: "host"
    user: 1001:1001
    environment:
      - TZ=Europe/Paris
    volumes:
      - '/data/services/jellyfin:/config'
      - '/merge/media:/media'
      - '/etc/letsencrypt/keys:/etc/keys'
      - '/data/cache:/cache'
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped

  # Transmission with vpn container
  transmission-openvpn:
    container_name: transmission-openvpn
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    cap_add:
      - NET_ADMIN
    volumes:
      - '/data/torrents:/data/torrents'
      - '/data/services/transmission:/config'
    environment:
      - OPENVPN_PROVIDER=PRIVADO
      - OPENVPN_CONFIG=fra-001,fra-002,fra-003,fra-004,fra-005,fra-006,fra-007,fra-008,beg-001,mad-001,osl-001,sin-001,zrh-001
      - OPENVPN_USERNAME=nhyeowvjxvwg
      - OPENVPN_PASSWORD=9pG%ZKT&
        #      - LOCAL_NETWORK=51.83.77.253/32
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
    ports:
      - '9091:9091'
      - '51413:51413'
    image: haugene/transmission-openvpn

  # Transmission with vpn container
  transmission:
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: 10m
    links:
      - transmission-openvpn:transmission
    ports:
      - '8080:8080'
    image: haugene/transmission-openvpn-proxy

  # Watchtower container
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/root/.docker/config.json:/config.json'
    environment:
      - WATCHTOWER_CLEANUP=true

  # Handbrake container
  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    ports:
      - "5800:5800"
    volumes:
      - "/data/services/handbrake:/config:rw"
      - "/:/storage:ro"
      - "/data/usenet/media:/watch:rw"
      - "/data/media:/output:rw"
    environment:
      - AUTOMATED_CONVERSION_KEEP_SOURCE=0
      - AUTOMATED_CONVERSION_OUTPUT_SUBDIR=SAME_AS_SRC
      - USER_ID=1001
      - GROUP_ID=1001
      - TZ=Europe/Paris
      - KEEP_APP_RUNNING=1

  # Ombi container
  ombi:
    image: ghcr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Paris
      - BASE_URL=/ombi
    volumes:
      - '/data/services/ombi:/config'
    ports:
      - 3579:3579
    restart: unless-stopped
